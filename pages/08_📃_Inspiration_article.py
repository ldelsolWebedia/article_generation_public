import deepl
import streamlit as st
from bokeh.models import CustomJS
from bokeh.models.widgets import Button
from st_aggrid import AgGrid, GridOptionsBuilder
from st_aggrid.shared import GridUpdateMode
from streamlit_bokeh_events import streamlit_bokeh_events

import GPT3
import scraping.scraping_bs4_article as scraping_bs4_article
import scraping.scraping_sitemap as scraping_sitemap

# from unidecode import unidecode

translator = deepl.Translator(st.secrets["DEEPL_KEY"])

st.set_page_config(
    page_title="Inspiration article jeux vid√©o/cin√©ma", page_icon="üìÉ", layout="wide",
)

if "first_time" not in st.session_state:
    st.session_state["first_time"] = True
    st.session_state["paragraphe_list"] = []
    st.session_state["text_to_be_copied"] = ""

st.title("üìÉ Inspiration article jeux vid√©o/cin√©ma")

with st.expander("‚ÑπÔ∏è - About this app", expanded=True):

    st.write(
        """     
-   Cette application permet de paraphraser des articles provenant d'autres sites appartenant √† Webedia traitant d'un th√®me commun.
-   En ouvrant l'application la liste des 10 derniers articles √©crit par les sites s√©l√©ctionn√©s est affich√©.
-   En cliquant sur un article de la liste le lien pour aller consulter cet article apparaitra pour que vous le consultiez.
-   Lorsque vous le consultez, vous avez la possibilit√©e de traduire l'article avec l'outil google translate associ√© √† google chrome.
-   Si vous souhaitez paraphraser l'article s√©l√©ctionn√©, vous pouvez appuyer sur le bouton "paraphraser l'article".
-   Vous pouvez recharger une partie de l'article si elle vous d√©plait en appuyant sur le bouton juste au dessus du paragraphe.
-   Pour copier l'article g√©n√©r√© appuyez sur le bouton 'Copier l'article' en dessous de l'article.
-   Pour plus d'informations : https://www.notion.so/webedia-group/Inspiration-article-jeux-vid-o-cin-ma-16004507bcae476fa5e3536c7ee6baf1
	    """
    )

    st.markdown("")


def callback():
    st.session_state["first_time"] = True


col1, col2, col3 = st.columns(3)

with col1:
    nb_entities = st.slider("Nombre d'articles", 1, 50, 10)
    if st.button("Rafraichir la liste d'articles"):
        st.session_state["first_time"] = True

with col2:
    entity = st.text_input("Mot √† filtrer", on_change=callback)

with col3:
    theme = st.selectbox("Th√®me", ("Jeux vid√©o", "Cin√©ma"), on_change=callback)


def aggrid_interactive_table(df):
    """Creates an st-aggrid interactive table based on a dataframe.

    Args:
        df (pd.DataFrame]): Source dataframe

    Returns:
        dict: The selected row
    """
    options = GridOptionsBuilder.from_dataframe(
        df, enableRowGroup=True, enableValue=True, enablePivot=True
    )

    options.configure_side_bar()

    options.configure_selection("single")
    selection = AgGrid(
        df,
        enable_enterprise_modules=True,
        gridOptions=options.build(),
        theme="alpine",
        update_mode=GridUpdateMode.MODEL_CHANGED,
        allow_unsafe_jscode=True,
        columns_auto_size_mode="FIT_CONTENTS",
    )

    return selection


def paraphrase(title, text):
    if st.button(f"üîÑ {title}") or st.session_state["paraphrase_process"]:
        st.session_state[title + "traduit"] = translator.translate_text(
            text, target_lang="FR"
        ).text
        st.session_state[title] = GPT3.gen_article(
            """Original: La vid√©o de la danse de Topen a √©t√© vue plus de 400 000 fois depuis qu'elle a √©t√© publi√©e sur YouTube la semaine derni√®re, et le plombier dit qu'il a d√©j√† √©t√© approch√© en public pour obtenir son autographe.
Paraphrase: Bien que la vid√©o du plombier dansant n'ait √©t√© post√©e sur YouTube que la semaine derni√®re, elle a d√©j√† √©t√© vue plus de 400 000 fois. Topen est devenu une c√©l√©brit√© presque instantan√©e, des inconnus lui ayant m√™me demand√© un autographe.

Original: Selon le magazine Heat, Miley a une liste de r√®gles strictes pour ses futurs hommes lors de ses sorties. Apparemment, son assistant organise ce que le gars doit porter, faire et parler pendant le rendez-vous. Elle n'aime pas non plus les fleurs, il lui est donc interdit de les lui apporter.
Paraphrase: Comme indiqu√© dans le magazine Heat, Miley Cyrus a un certain nombre de r√®gles bizarres pour les rendez-vous. Elle est si pr√©cise sur ce que ses partenaires doivent porter, dire et faire qu'elle demande √† son assistant de faire respecter ces r√®gles lors des rendez-vous. Miley Cyrus n'aime m√™me pas les fleurs et ne laisse pas ses partenaires les acheter pour elle.

Original: Les responsables des admissions √† l'universit√© d√©conseillent tous d'√©crire un essai d'admission √† l'universit√© sur quelque chose que le candidat a appris en √©tant d√©fonc√© ou ivre. "Mais nous recevons toujours quelques-unes de ces dissertations", me dit un responsable des admissions √† l'universit√©. "Nous avons m√™me re√ßu la dissertation classique dans laquelle l'√©tudiant, alors qu'il √©tait d√©fonc√©, a r√©alis√© que le syst√®me solaire √©tait un atome et la terre un √©lectron. Vous vous souviendrez que cette conversation a eu lieu dans le film Animal House.
Paraphrase: Les responsables des admissions √† l'universit√© recommandent g√©n√©ralement aux √©tudiants de ne pas √©crire leur dissertation d'admission sur une le√ßon apprise lorsqu'ils √©taient d√©fonc√©s ou ivres ; cependant, certains √©tudiants ignorent toujours ce conseil. Par exemple, un √©tudiant a √©crit sur la conversation dans Animal House, comme s'il s'agissait de sa propre exp√©rience de d√©fonc√©, sur le syst√®me solaire comme un atome et la terre comme une √©lection.

Original: Un homme de Gastonia √¢g√© de 68 ans affirme avoir fait fuir deux hommes masqu√©s qui tentaient de s'introduire chez lui avec son arme qu'il peut garder sur son d√©ambulateur. Il a ensuite coll√© une note sur sa porte disant que s'ils tentent de p√©n√©trer √† nouveau chez lui, il les attendra.
Paraphrase : Deux hommes ont tent√© de s'introduire dans la maison d'un homme de 68 ans, mais ils ont √©t√© effray√©s par l'arme que l'homme gardait sur son d√©ambulateur. Par la suite, l'homme a coll√© une note sur la porte pour pr√©venir qu'il attendrait les cambrioleurs s'ils revenaient.

Original: """
            + st.session_state[title + "traduit"]
            + "\nParaphrase:",
            2000,
            temperature,
            top_p,
            frequency_penalty,
            presence_penalty,
        )[0]

    col_paraphrase, col_translate = st.columns(2)

    with col_paraphrase:
        st.write(st.session_state[title])
    with col_translate:
        st.write(st.session_state[title + "traduit"])


with st.sidebar:
    st.write("## Caract√©ristiques de GPT 3")
    temperature = st.slider(
        "Temperature : La temp√©rature correspond √† la cr√©ativit√© de GPT3, plus elle sera √©lev√©e et plus GPT3 innovera.",
        min_value=0.00,
        max_value=1.00,
        value=0.70,
        step=0.01,
    )
    top_p = st.slider(
        "Top p : Le top P est une alternative √† la temp√©rature. Attention, il ne faut pas utiliser les deux en m√™me temps. Si on modifie l‚Äôun, il faut mettre l‚Äôautre √† 1.",
        min_value=0.00,
        max_value=1.00,
        value=1.00,
        step=0.01,
    )
    frequency_penalty = st.slider(
        "Frequency penalty : La frequency penalty fonctionne en diminuant les chances qu'un mot soit s√©lectionn√© √† nouveau plus il a √©t√© utilis√© de fois.",
        min_value=0.00,
        max_value=2.00,
        value=0.20,
        step=0.01,
    )
    presence_penalty = st.slider(
        "Presence_penalty : La presence penalty fonctionne en diminuant les chances qu'un th√®me soit s√©lectionn√© √† nouveau plus il a √©t√© utilis√© de fois.",
        min_value=0.00,
        max_value=2.00,
        value=2.00,
        step=0.01,
    )

if st.session_state["first_time"]:
    st.session_state["sitemap"] = scraping_sitemap.sitemap(theme)

    if entity != "":
        st.session_state["sitemap"] = st.session_state["sitemap"][
            st.session_state["sitemap"]["news_title"]
            .str.lower()
            .str.contains(entity.lower())
        ]
        # st.session_state["sitemap"] = st.session_state["sitemap"].loc[unidecode(st.session_state["sitemap"]['news_title'].str).contains(entity.lower())]

    st.session_state["sitemap"] = st.session_state["sitemap"].head(nb_entities)

    if entity == "" or (entity != "" and len(st.session_state["sitemap"]) != 0):
        object_list = translator.translate_text(
            st.session_state["sitemap"]["news_title"], target_lang="FR"
        )
        st.session_state["sitemap"]["news_title"] = [obj.text for obj in object_list]
    else:
        st.write(
            "### Pas d'article trouv√©. Veuillez v√©rifier l'orthographe de votre recherche."
        )

selection = aggrid_interactive_table(df=st.session_state["sitemap"])

if selection["selected_rows"] != []:

    st.write("## Article s√©lectionn√©:")
    st.write(selection["selected_rows"][0]["loc"])

    if st.button("paraphraser l'article"):

        st.session_state["paraphrase_process"] = True

        st.session_state["title"] = selection["selected_rows"][0]["news_title"]

        st.write("# " + st.session_state["title"])

        st.session_state["paragraphe_list"] = scraping_bs4_article.get_article(
            selection["selected_rows"][0]["loc"],
            selection["selected_rows"][0]["publication_name"],
        )

        st.session_state["paragraphe_list"] = [
            el for el in st.session_state["paragraphe_list"] if el != ""
        ]

        col_paraphrase, col_translate = st.columns(2)
        with col_paraphrase:
            st.write("### Paragraphe paraphras√©")
        with col_translate:
            st.write("### Paragraphe traduit")
        for i, el in enumerate(st.session_state["paragraphe_list"]):
            paraphrase(f"Paragraphe {i+1}", el)

        st.session_state["text_to_be_copied"] = st.session_state["title"]

        for i in range(len(st.session_state["paragraphe_list"])):
            st.session_state["text_to_be_copied"] += "\n\n" + st.session_state[
                f"Paragraphe {i+1}"
            ].replace("\n", "")

        st.session_state["paraphrase_process"] = False

    elif st.session_state["paragraphe_list"] != []:

        st.write("# " + st.session_state["title"])

        col_paraphrase, col_translate = st.columns(2)
        with col_paraphrase:
            st.write("### Paragraphe paraphras√©")
        with col_translate:
            st.write("### Paragraphe traduit")
        for i, el in enumerate(st.session_state["paragraphe_list"]):
            paraphrase(f"Paragraphe {i+1}", el)

# st.write(st.session_state["first_time"])

copy_button = Button(label="Copier l'article")
copy_button.js_on_event(
    "button_click",
    CustomJS(
        args={"text": st.session_state["text_to_be_copied"]},
        code="""
    navigator.clipboard.writeText(text);
    """,
    ),
)

no_event = streamlit_bokeh_events(
    copy_button,
    events="GET_TEXT",
    key="get_text",
    refresh_on_update=True,
    override_height=75,
    debounce_time=0,
)

st.session_state["first_time"] = False
